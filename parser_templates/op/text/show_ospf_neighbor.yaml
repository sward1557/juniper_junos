---
- name: parser meta data
  parser_metadata:
    version: 1.0
    command: show ospf neighbor detail
    network_os: junos

- name: match sections
  pattern_match:
    regex: "(?:[0-9]{1,3}\\.){3}[0-9]{1,3})"
    match_all: yes
    match_greedy: yes
  register: context

- name: match neighbor ip values
  pattern_group:
    - name: match name
      pattern_match:
        regex: "(\\w+)"
        content: "{{ item }}"
      register: ip

    - name: match ospf area
      pattern_match:
        regex: "(\\w+)"
        content: "{{ item }}"
      register: area

    - name: match ospf interface
      pattern_match:
        regex: "ge-|st0(\\S+)"
        content: "{{ item }}"
      register: interface

    - name: match ospf state
      pattern_match:
        regex: "(Full|Two-way|Init|Exstart|Exchange|Loading|Down)"
        content: "{{ item }}"
      register: state

    - name: match ospf up/down time
      pattern_match:
        regex: "((Up|Down) \\S+ \\d*:\\d*:\\d*)"
        content: "{{ item }}"
      register: time

  loop: "{{ context }}"
  register: values

- name: template interface values
  loop: "{{ values }}"
  register: routing
  export: yes
  export_as: dict
  extend: juniper_junos
  json_template:
    template:
      - key: "{{ item.name.matches.0 }}"
        object:
          - key: ip
            value: "{{ item.ip.matches.0 }}"
          - key: area
            value: "{{ item.area.matches.0 }}"
          - key: interface
            value: "{{ item.interface.matches.0 }}"
          - key: state
            value: "{{ item.state.matches.0 }}"
          - key: time
            value: "{{ item.time.matches.0 }}"
